name: Publish Blog

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Create the .ssh directory if it does not exist.
        run: |
          mkdir -p "$HOME/.ssh"
          chmod -R 700 "$HOME/.ssh"

      - name: Import SSH private key
        run: |
          echo "${{ secrets.ORACLE_CLOUD_SSH_KEY }}" > "$HOME/.ssh/id_ed25519"
          chmod 600 $HOME/.ssh/id_ed25519

      - name: Import host into known_hosts file
        run: |
          echo "${{ secrets.ORACLE_CLOUD_KNOWN_HOSTS }}" > "$HOME/.ssh/known_hosts"
          chmod 600 "$HOME/.ssh/known_hosts"

      - name: install jq
        run: |
          sudo apt update && sudo apt install jq -y


      - name: Install hugo and build the site.
        run: |
          wget $(curl -s https://api.github.com/repos/gohugoio/hugo/releases/latest  | jq -r '.assets[] | select(.name | contains ("deb")) | .browser_download_url')
          DEB_FILE=(ls | grep hugo | head 1)
          sudo dpkg -i "$DEB_FILE"
          hugo

      - name: Check if public directory exists
        run: |
          if [ ! -d ./public ]; then
            echo "Error: ./public directory does not exist!"
            exit 1
          else
            ls -al ./public
          fi


      - name: SCP the public directory to the remote server.
        run: scp -r -i "$HOME/.ssh/id_ed25519" ./public/* github@blog.ssb-tech.net:/var/www/blog.ssb-tech.net

      - name: Clean up .ssh directory.
        run: rm -rf "$HOME/.ssh"


