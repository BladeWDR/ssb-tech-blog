name: Publish Blog

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

env:
  HUGO_VERSION: 0.137.1

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Create the .ssh directory if it does not exist.
        run: |
          mkdir -p "$HOME/.ssh"
          chmod -R 700 "$HOME/.ssh"

      - name: Import SSH private key
        run: |
          echo "${{ secrets.ORACLE_CLOUD_SSH_KEY }}" > "$HOME/.ssh/id_ed25519"
          chmod 600 $HOME/.ssh/id_ed25519

      - name: Import host into known_hosts file
        run: |
          echo "${{ secrets.ORACLE_CLOUD_KNOWN_HOSTS }}" > "$HOME/.ssh/known_hosts"
          chmod 600 "$HOME/.ssh/known_hosts"

      - name: install jq
        run: |
          sudo apt update && sudo apt install jq -y

      # temporary workaround for Hugo v0.139.5 being released with no deb package available.
      - name: Install hugo and build the site 
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
          hugo

      # - name: Install hugo and build the site.
      #   run: |
      #     wget -O "$HOME/hugo-latest.deb" $(curl -s https://api.github.com/repos/gohugoio/hugo/releases/latest  | jq -r '.assets[] | select(.name | contains ("linux-amd64.deb")) | .browser_download_url')
      #     sudo dpkg -i "$HOME/hugo-latest.deb"
      #     hugo

      - name: Check if public directory exists
        run: |
          if [ ! -d ./public ]; then
            echo "Error: ./public directory does not exist!"
            exit 1
          else
            ls -al ./public
          fi


      - name: SCP the public directory to the remote server.
        run: scp -r -i "$HOME/.ssh/id_ed25519" ./public/* github@143.47.99.12:/var/www/blog.ssb-tech.net

      - name: Clean up .ssh directory.
        run: rm -rf "$HOME/.ssh"
